{
	"info": {
		"_postman_id": "81340822-9c5f-4022-adf7-47387b60708c",
		"name": "auto_mobilepay_cc",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "cc_key",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9b90fa46-742e-4468-a8ef-0247e95f5436",
						"exec": [
							"function RandomRange(min, max) {",
							"    var returnStr = \"\",",
							"\trange = (max ? Math.round(Math.random() * (max-min)) + min : min),",
							"\tarr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd','e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];",
							"\tfor(var i=0; i<range; i++){",
							"\t    var index = Math.round(Math.random() * (arr.length-1));",
							"\t    returnStr += arr[index];",
							"\t}",
							"\treturn returnStr;",
							"}",
							"",
							"RandomRange(1,25)",
							"pm.globals.set(\"reference\", RandomRange(1,25));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "87513437-724a-4347-9a83-2a2b25e6c876",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"pulicKey is exist\", function () {",
							"    var publicKey = pm.response.json().public_key;",
							"    pm.expect(publicKey).to.not.be.empty;",
							"    publicKey = publicKey.replace(/\\//g,\"/\");",
							"    pm.globals.set(\"publicKey\",publicKey);",
							"});",
							"   ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{cc_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "currency",
							"value": "USD",
							"type": "text"
						},
						{
							"key": "amount",
							"value": "1",
							"type": "text"
						},
						{
							"key": "vendor",
							"value": "cc",
							"type": "text"
						},
						{
							"key": "reference",
							"value": "{{reference}}",
							"type": "text"
						},
						{
							"key": "ipn_url",
							"value": "https://{{url}}.citconpay.com/chop/ipn_cc",
							"type": "text"
						},
						{
							"key": "callback_url",
							"value": "http://merchant.com/success",
							"type": "text"
						},
						{
							"key": "cancel_url",
							"value": "http://merchant.com/fail",
							"type": "text"
						},
						{
							"key": "allow_duplicates",
							"value": "no",
							"type": "text"
						},
						{
							"key": "source",
							"value": "chop",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://{{url}}.citconpay.com/payment/key",
					"protocol": "https",
					"host": [
						"{{url}}",
						"citconpay",
						"com"
					],
					"path": [
						"payment",
						"key"
					]
				}
			},
			"response": []
		},
		{
			"name": "cc_pay",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cae2a363-542d-4aa4-b735-758138977b8c",
						"exec": [
							"\r",
							"let publicKey = pm.globals.get(\"publicKey\");\r",
							"let reference = pm.globals.get(\"reference\");\r",
							"if (!pm.globals.has(\"forgeJS\")) {\r",
							"    pm.sendRequest(\"http://xiaoqi.internal.citconpay.com/forge.js\", function (err, res) {\r",
							"        if (err) {\r",
							"            console.log(err);\r",
							"        } else {\r",
							"            pm.globals.set(\"forgeJS\", res.text());\r",
							"            \r",
							"        }\r",
							"    })\r",
							"    \r",
							"}else{\r",
							"  \r",
							"    eval(pm.globals.get(\"forgeJS\"))\r",
							"    let public_key = `-----BEGIN PUBLIC KEY-----${publicKey}-----END PUBLIC KEY-----`;\r",
							"    console.log(public_key)\r",
							"\r",
							"    publicKey = forge.pki.publicKeyFromPem(public_key);\r",
							"    \r",
							"    var encryptedText = forge.util.encode64(publicKey.encrypt(\"card_number=370000000000002&exp_date=1222&cvv2cvc2=2222&avs_zip=22222&first_name=xiaoqian&last_name=huang&avs_address=111&address2=222&city=city&state=state&country=country&email=email@22.com\"));\r",
							"    console.log(\"encrypted text:\" + encryptedText);\r",
							"    \r",
							"let data = pm.globals.set(\"data\",encryptedText);\r",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "971c5494-2149-4b80-a74e-cd36660d9830",
						"exec": [

							"console.log(pm.response)",

							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							
							"pm.test(\"result is success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"success\");",
							"    pm.globals.set(\"transaction_id\", jsonData.id);",
							"});",
							
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{cc_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "amount",
							"value": "1",
							"type": "text"
						},
						{
							"key": "currency",
							"value": "USD",
							"type": "text"
						},
						{
							"key": "vendor",
							"value": "cc",
							"type": "text"
						},
						{
							"key": "reference",
							"value": "{{reference}}",
							"type": "text"
						},
						{
							"key": "ipn_url",
							"value": "https://{{url}}.citconpay.com/chop/ipn_cc",
							"type": "text"
						},
						{
							"key": "allow_duplicates",
							"value": "no",
							"type": "text"
						},
						{
							"key": "callback_url",
							"value": "http://merchant.com/success",
							"type": "text"
						},
						{
							"key": "cancel_url",
							"value": "http://merchant.com/fail",
							"type": "text"
						},
						{
							"key": "note",
							"value": "note",
							"type": "text"
						},
						{
							"key": "source",
							"value": "chop",
							"type": "text",
							"disabled": true
						},
						{
							"key": "user_token",
							"value": "61325db0fb1e7531f18c209bd",
							"type": "text",
							"disabled": true
						},
						{
							"key": "data",
							"value": "{{data}}",
							"type": "text"
						},
						{
							"key": "card_on_file",
							"value": "yes",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{url}}.citconpay.com/payment/pay",
					"protocol": "https",
					"host": [
						"{{url}}",
						"citconpay",
						"com"
					],
					"path": [
						"payment",
						"pay"
					]
				}
			},
			"response": []
		},
		{
			"name": "cc_refund",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ab39f281-4749-45df-94d5-4d267a9026d7",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"result is success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(\"success\");",
							"    pm.expect(jsonData.refunded).to.eql(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{cc_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "Accept-Encoding",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "currency",
							"value": "USD",
							"type": "text"
						},
						{
							"key": "transaction_id",
							"value": "{{transaction_id}}",
							"type": "text"
						},
						{
							"key": "amount",
							"value": "1",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://{{url}}.citconpay.com/payment/refund",
					"protocol": "https",
					"host": [
						"{{url}}",
						"citconpay",
						"com"
					],
					"path": [
						"payment",
						"refund"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}
